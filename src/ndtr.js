// https://github.com/jeremybarnes/cephes/blob/master/cprob/ndtr.c

import { polevl, p1evl } from "./polevl.js";

const P = [
    +2.46196981473530512524E-10,
    +5.64189564831068821977E-01,
    +7.46321056442269912687E+00,
    +4.86371970985681366614E+01,
    +1.96520832956077098242E+02,
    +5.26445194995477358631E+02,
    +9.34528527171957607540E+02,
    +1.02755188689515710272E+03,
    +5.57535335369399327526E+02,
];

const Q = [
    +1.32281951154744992508E+01,
    +8.67072140885989742329E+01,
    +3.54937778887819891062E+02,
    +9.75708501743205489753E+02,
    +1.82390916687909736289E+03,
    +2.24633760818710981792E+03,
    +1.65666309194161350182E+03,
    +5.57535340817727675546E+02,
];

const R = [
    +5.64189583547755073984E-01,
    +1.27536670759978104416E+00,
    +5.01905042251180477414E+00,
    +6.16021097993053585195E+00,
    +7.40974269950448939160E+00,
    +2.97886665372100240670E+00,
];

const S = [
    +2.26052863220117276590E+00,
    +9.39603524938001434673E+00,
    +1.20489539808096656605E+01,
    +1.70814450747565897222E+01,
    +9.60896809063285878198E+00,
    +3.36907645100081516050E+00,
];

const T = [
    +9.60497373987051638749E+00,
    +9.00260197203842689217E+01,
    +2.23200534594684319226E+03,
    +7.00332514112805075473E+03,
    +5.55923013010394962768E+04,
];

const U = [
    +3.35617141647503099647E+01,
    +5.21357949780152679795E+02,
    +4.59432382970980127987E+03,
    +2.26290000613890934246E+04,
    +4.92673942608635921086E+04,
];

export function erf(x) {
    if (Math.abs(x) > 1)
        return 1 - erfc(x);
    const xx = x*x;
    return x*polevl(xx, T)/p1evl(xx, U);
}

export function erfc(x) {
    const m = Math.abs(x);
    if (m < 1)
        return 1 - erf(x);
    const xx = x*x;
    if (xx > Math.log(Number.MAX_VALUE))
        return x < 0 ? 2 : 0;
    const [p, q] = m < 8 ? [P, Q] : [R, S];
    const y = Math.exp(-xx)*polevl(m, p)/p1evl(m, q);
    return x < 0 ? 2 - y : y;
}

export function erfce(x) {
    const [p, q] = m < 8 ? [P, Q] : [R, S];
    return polevl(x, p)/p1evl(x, q);
}

export function ndtr(x) {
    const a = Math.SQRT2/2*x;
    const z = Math.abs(a);
    if (z < 1)
        return (1 + erf(a))/2;
    const y = erfc(z)/2;
    return a > 0 ? 1 - y : y;
}
